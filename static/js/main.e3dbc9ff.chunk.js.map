{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["headerColor","panelColor","panelColor2","HeadFootWrapper","props","style","backgroundColor","height","react_default","a","createElement","children","Header","Filter","display","alignItems","fontSize","color","type","id","filterId","name","marginRight","filterName","StringFilter","width","src","alt","margin","size","LeftFilters","flexDirection","flexShrink","padding","Folders","flexGrow","LeftColumn","minWidth","TodosInner","_this","this","itemStyle","borderRadius","todos","sort","b","Date","dueDate","map","todo","index","description","completed","onClick","dispatch","Component","Todos","connect","state","TodoFormInner","nameInput","descInput","dueDateInput","_this2","containerStyle","marginTop","onSubmit","e","preventDefault","value","trim","ref","node","TodoForm","Page","flex","Body","App_Page","AppBody","className","App_Body","store","createStore","arguments","length","undefined","action","concat","Object","toConsumableArray","objectSpread","subscribe","console","log","getState","App","es","App_AppBody","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e3dbc9ff.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport './App.css';\n\n//const headerColor = \"#47476b\"\nconst headerColor = \"#ff00ff\"\n// const panelColor = \"#6c7c96\"\nconst panelColor = \"#1d006d\"\n// const panelColor2 = \"#9ab9ea\"\nconst panelColor2 = \"#00d0ff\"\n// const pageColor = \"#e0e0eb\"\nconst pageColor = \"#3c0042\"\nconst formColor = \"pink\"\n\n\nfunction HeadFootWrapper(props) {\n  const style = {\n    backgroundColor: headerColor,\n    height: \"50px\"\n  }\n\n  return (\n    <div style={style}>\n      {props.children}\n    </div>\n  )\n}\n\nfunction Header() {\n  return (\n    <HeadFootWrapper>\n      <p>Checklist</p>\n    </HeadFootWrapper>\n  )\n}\n\n/*\nfunction Footer() {\n  return (\n    <HeadFootWrapper>\n      <p>Footer!</p>\n    </HeadFootWrapper>\n  )\n}\n*/\n\nfunction Filter(props) {\n  const style = {\n    display: \"flex\",\n    alignItems: \"center\",\n    height: \"30px\",\n    fontSize: \"20px\",\n    color: \"white\"\n  }\n\n  return (\n    <div style={style}>\n      <input type=\"checkbox\" id={props.filterId} name={props.filterId} style={{marginRight: \"10px\"}}></input>\n      <p style={{marginRight: \"20px\"}}>{props.filterName}</p>\n    </div>\n  )\n}\n\nfunction StringFilter(props) {\n  const inputStyle = {\n    margin: \"0 0 0 15px\",\n    width: \"120px\"\n  }\n  const parentStyle = {\n    display: \"flex\", \n    alignItems: \"center\",\n    height: \"30px\"\n  }\n  const imgStyle = {\n    width: \"20px\"\n  }\n\n  return (\n    <div style={parentStyle}>\n      <img style={imgStyle} src=\"https://img.icons8.com/metro/26/000000/search.png\" alt=\"Search\"></img>\n      <input style={inputStyle} type=\"text\" size=\"10\"/>\n    </div>\n  )\n}\n\nfunction LeftFilters() {\n  const style = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexShrink: 0,\n    padding: \"15px\"\n  }\n\n  return (\n    <div style={style}>\n      <Filter filterId=\"today\" filterName=\"Today\" />\n      <Filter filterId=\"nextTwoWeeks\" filterName=\"Next Two Weeks\" />\n      <StringFilter />\n    </div>\n  )\n}\n\nfunction Folders() {\n  const style = {\n    backgroundColor: panelColor2,\n    flexGrow: 1,\n    width: \"100%\"\n  }\n  return <div style={style} />\n}\n\nfunction LeftColumn() {\n  const style = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    minWidth: \"150px\",\n    height: \"100%\",\n    backgroundColor: panelColor\n  }\n\n  return (\n    <div style={style}>\n      <LeftFilters />\n      <Folders />\n    </div>\n  )\n}\n\nconst markComplete = (name) => ({\n  type: 'MARK_COMPLETE',\n  name: name\n})\n\nclass TodosInner extends Component {\n  render() {\n    const todosContainerStyle = {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    }\n    const itemStyle = {\n      margin: \"5px\",\n      backgroundColor: \"#faff00\",\n      borderRadius: \"5px\",\n      padding: \"5px\"\n    }\n\n    return (\n      // TODO: Why is index bad? https://stackoverflow.com/questions/28329382/understanding-unique-keys-for-array-children-in-react-js\n      <div style={todosContainerStyle}>\n        {this.props.todos.sort(function(a, b){return new Date(a.dueDate) - new Date(b.dueDate)}).map((todo, index) => (\n            <div style={itemStyle}>\n              <div>Task: {todo.name}</div>\n              <div>Description: {todo.description}</div>\n              <div>Due Date: {todo.dueDate}</div>\n              <div>{todo.completed ? \"Complete!\" : \"Incomplete\"}</div>\n              <button onClick={() => this.props.dispatch(markComplete(todo.name))} type=\"button\">Mark Complete</button>\n            </div>\n          ))}\n      </div>\n    )\n  }\n}\n\nconst mapStateToPropsTodos = (state) => {\n  return {\n    todos: state\n  }\n}\n\nconst Todos = connect(mapStateToPropsTodos, null)(TodosInner)\n\nconst addTodo = (name, description, dueDate) => ({\n  type: 'ADD_TODO',\n  name: name,\n  description: description,\n  dueDate: dueDate\n})\n\nclass TodoFormInner extends Component {\n  render() {\n    const containerStyle = {\n      backgroundColor: formColor,\n      borderRadius: \"10px\",\n      width: \"200px\",\n      padding: \"10px\",\n      margin: \"10px\"\n    }\n    const formStyle = {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    }\n    const itemStyle = {\n      marginTop: \"2px\",\n    }\n    let nameInput, descInput, dueDateInput;\n\n    return (\n      <div style={containerStyle}>\n        <form\n          style={formStyle}\n          onSubmit={e => {\n            e.preventDefault()\n            if (!nameInput.value.trim() || !descInput.value.trim()) {\n              return\n            }\n            this.props.dispatch(addTodo(nameInput.value, descInput.value, dueDateInput.value))\n            nameInput.value = ''\n            descInput.value = ''\n            dueDateInput.value = ''\n          }}\n        >\n          <input style={itemStyle} ref={node => (nameInput = node)} />\n          <input style={itemStyle} ref={node => (descInput = node)} />\n          <input style={itemStyle} type=\"date\" ref={node => (dueDateInput = node)} />\n          <button style={itemStyle} type=\"submit\">Add Todo</button>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst TodoForm = connect()(TodoFormInner)\n\nclass Page extends Component {\n  render() {\n    const style = {\n      flex: 1,\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    }\n\n    return (\n      <div style={style}>\n        <TodoForm />\n        <Todos />\n      </div>\n    )\n  }\n}\n\nclass Body extends Component {\n  render() {\n    const style = {\n      flex: 1,\n      display: \"flex\",\n      backgroundColor: pageColor\n    }\n\n    return (\n      <div style={style}>\n        <LeftColumn />\n        <Page />\n      </div>\n    )\n  }\n}\n\nfunction reducer(state = [], action) {\n  switch (action.type) { \n    case 'ADD_TODO':\n      return [\n        ...state,\n        {\n          name: action.name,\n          description: action.description,\n          dueDate: action.dueDate,\n          completed: false\n        }\n      ]\n    case 'MARK_COMPLETE':\n      return state.map(todo =>\n        todo.name === action.name ? { ...todo, completed: true } : todo\n      )\n    default:\n      return state\n  }\n}\n\nclass AppBody extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Body />\n      </div>\n    );\n  }\n}\n\nlet store = createStore(reducer)\nstore.subscribe(() => (console.log(store.getState())))\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <AppBody />\n      </Provider>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />, \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}