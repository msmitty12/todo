{"version":3,"sources":["actions.js","components/Todos2.js","components/TodoForm2.js","components/LeftFilters.js","components/Body.js","components/Header.js","components/App.js","serviceWorker.js","reducers.js","index.js"],"names":["toggleLeftColumn","type","Task","first","second","_this","this","remainingDays","Date","props","dueDate","Math","trunc","taskColor","lightness","hue","toString","join","getColor","taskStatus","completed","react_default","a","createElement","className","style","Object","objectSpread","margin","backgroundColor","borderRadius","padding","width","name","description","href","onClick","dispatch","id","Component","Todos","_this2","display","flexDirection","alignItems","todos","sort","b","map","todo","index","Todos2_Task","assign","connect","state","TodoForm2","nameInput","descInput","dueDateInput","containerStyle","borderStyle","borderColor","class","ref","node","placeholder","rows","e","preventDefault","value","trim","uuid","Filter","height","fontSize","color","filterId","marginRight","filterName","StringFilter","src","alt","size","LeftFilters","panelColor","panelColor2","Folders","LeftColumn","minHeight","calcClass","Page","components_TodoForm2","Todos2","Body","leftColumnClass","pageClass","page","leftColumn","visible","paddingTop","Body_Page","headerColor","HeadFootWrapper","position","zIndex","children","App","textAlign","components_Header","components_Body","Boolean","window","location","hostname","match","reducer","combineReducers","doc","arguments","length","undefined","action","newTodo","db","collection","add","then","docRef","console","log","catch","error","concat","toConsumableArray","docId","key","val","doc_query","where","updateDict","get","querySnapshot","forEach","update","updateDoc","delete","removeDoc","filter","__webpack_require__","d","__webpack_exports__","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","data","push","preloadedState","store","createStore","subscribe","getState","ReactDOM","render","es","components_App","document","getElementById","initApp","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gNAoBaA,EAAmB,iBAAO,CACnCC,KAAM,2BCIJC,mLACK,IAPOC,EAAOC,EAOdC,EAAAC,KASHC,GAhBUJ,EAgBe,IAAIK,KAhBZJ,EAgBoB,IAAII,KAAKF,KAAKG,MAAMC,SAbtDC,KAAKC,OAAOR,EAAOD,GAAR,QAcZU,EA/BV,SAAkBN,GACd,IAAIO,EAAY,KAGZC,IAFgBR,EAAgB,EAAI,EAAIA,GACb,EACd,IAAIS,SAAS,IAO9B,OANIT,EAAgB,GAClBO,EAAY,KACZC,EAAM,KACGR,EAAgB,IACzBQ,EAAM,MAED,CAAC,OAAOA,EAAI,SAASD,EAAU,MAAMG,KAAK,IAoB/BC,CAASX,GACrBY,EAAab,KAAKG,MAAMW,UAAY,YAAcb,EAAgB,EAAI,UAAY,aAExF,OACEc,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,MAAKC,OAAAC,EAAA,EAAAD,CAAA,GAbX,CAChBE,OAAQ,MACRC,gBAAiB,cACjBC,aAAc,MACdC,QAAS,MACTC,MAAO,QAQoB,CAAiBH,gBAAiBvB,KAAKG,MAAMW,UAAY,aAAeP,KACjGQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAclB,KAAKG,MAAMwB,MACvCZ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAalB,KAAKG,MAAMyB,aACrCb,EAAAC,EAAAC,cAAA,wBAAgBjB,KAAKG,MAAMC,SAC3BW,EAAAC,EAAAC,cAAA,UAAKJ,GACLE,EAAAC,EAAAC,cAAA,UAAQY,KAAK,IAAIX,UAAU,eAAeY,QAAS,kBAAM/B,EAAKI,MAAM4B,SDpCzC,CACnCpC,KAAM,gBACNqC,GCkCkGjC,EAAKI,MAAM6B,OAArG,iBACAjB,EAAAC,EAAAC,cAAA,UAAQY,KAAK,IAAIX,UAAU,iBAAiBY,QAAS,kBAAM/B,EAAKI,MAAM4B,SDhC7C,CACjCpC,KAAM,cACNqC,GC8BkGjC,EAAKI,MAAM6B,OAArG,mBAtBSC,aA6BbC,mLACK,IAAAC,EAAAnC,KAQP,OACEe,EAAAC,EAAAC,cAAA,OAAKE,MARqB,CAC1BiB,QAAS,OACTC,cAAe,SACfC,WAAY,SACZZ,MAAO,SAKJ1B,KAAKG,MAAMoC,MAAMC,KAAK,SAASxB,EAAGyB,GAAG,OAAO,IAAIvC,KAAKc,EAAEZ,SAAW,IAAIF,KAAKuC,EAAErC,WAAWsC,IAAI,SAACC,EAAMC,GAAP,OACzF7B,EAAAC,EAAAC,cAAC4B,EAADzB,OAAA0B,OAAA,GAAUH,EAAV,CAAgBZ,SAAUI,EAAKhC,MAAM4B,sBAZ7BE,aAyBLc,cANc,SAACC,GAC5B,MAAO,CACLT,MAAOS,EAAMT,QAI4B,KAA9BQ,CAAoCb,GCtE7Ce,gMACK,IAUHC,EAAWC,EAAWC,EAVnBrD,EAAAC,KACDqD,EAAiB,CACrBC,YAAa,QACbC,YAPc,UAQd/B,aAAc,OAEdgC,MAAO,aACP/B,QAAS,OACTH,OAAQ,QAIV,OACEP,EAAAC,EAAAC,cAAA,QAAME,MAAOkC,GACXtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaQ,MAAM,OAChCX,EAAAC,EAAAC,cAAA,SAAOtB,KAAK,OAAOuB,UAAU,eAAeuC,IAAK,SAAAC,GAAI,OAAKR,EAAYQ,GAAOC,YAAY,eAE3F5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,YAAUC,UAAU,eAAeuC,IAAK,SAAAC,GAAI,OAAKP,EAAYO,GAAOC,YAAY,cAAcC,KAAK,OAErG7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SAAOtB,KAAK,OAAOuB,UAAU,eAAeuC,IAAK,SAAAC,GAAI,OAAKN,EAAeM,MAE3E3C,EAAAC,EAAAC,cAAA,UAAQtB,KAAK,SAASuB,UAAU,kBAAkBY,QAAS,SAAA+B,GFhC5C,IAAClC,EAAMC,EAAaxB,GEiC/ByD,EAAEC,iBACGZ,EAAUa,MAAMC,UAGrBjE,EAAKI,MAAM4B,UFrCCJ,EEqCgBuB,EAAUa,MFrCpBnC,EEqC2BuB,EAAUY,MFrCxB3D,EEqC+BgD,EAAaW,MFrC/B,CACtD/B,GAAIiC,eACJtE,KAAM,WACNgC,KAAMA,EACNC,YAAaA,EACbxB,QAASA,KEiCC8C,EAAUa,MAAQ,GAClBZ,EAAUY,MAAQ,GAClBX,EAAaW,MAAQ,MARzB,oBAzBgB9B,cAwCTc,gBAAUE,GC/CzB,SAASiB,EAAO/D,GASd,OACEY,EAAAC,EAAAC,cAAA,OAAKE,MATO,CACZiB,QAAS,OACTE,WAAY,SACZ6B,OAAQ,OACRC,SAAU,OACVC,MAAO,UAKLtD,EAAAC,EAAAC,cAAA,SAAOtB,KAAK,WAAWqC,GAAI7B,EAAMmE,SAAU3C,KAAMxB,EAAMmE,SAAUnD,MAAO,CAACoD,YAAa,UACtFxD,EAAAC,EAAAC,cAAA,KAAGE,MAAO,CAACoD,YAAa,SAAUpE,EAAMqE,aAK9C,SAASC,EAAatE,GAcpB,OACEY,EAAAC,EAAAC,cAAA,OAAKE,MAVa,CAClBiB,QAAS,OACTE,WAAY,SACZ6B,OAAQ,SAQNpD,EAAAC,EAAAC,cAAA,OAAKE,MANQ,CACfO,MAAO,QAKiBgD,IAAI,oDAAoDC,IAAI,WAClF5D,EAAAC,EAAAC,cAAA,SAAOE,MAhBQ,CACjBG,OAAQ,aACRI,MAAO,SAcqB/B,KAAK,OAAOiF,KAAK,QAK1C,SAASC,IAKd,OACE9D,EAAAC,EAAAC,cAAA,OAAKE,MALO,CACZM,QAAS,SAKPV,EAAAC,EAAAC,cAACiD,EAAD,CAAQI,SAAS,QAAQE,WAAW,UACpCzD,EAAAC,EAAAC,cAACiD,EAAD,CAAQI,SAAS,OAAOE,WAAW,SACnCzD,EAAAC,EAAAC,cAACwD,EAAD,OC1CN,IAAMK,EAAa,UACbC,EAAc,UAQpB,SAASC,IACP,IAAM7D,EAAQ,CACZI,gBAAiBwD,EACjBrD,MAAO,QAET,OAAOX,EAAAC,EAAAC,cAAA,OAAKE,MAAOA,IAGrB,SAAS8D,EAAW9E,GAClB,IAAMgB,EAAQ,CACZI,gBAAiBuD,EACjBI,UAAW,QAGb,OACEnE,EAAAC,EAAAC,cAAA,OAAKC,UAAWf,EAAMgF,UAAWhE,MAAOA,GACtCJ,EAAAC,EAAAC,cAAC4D,EAAD,MACA9D,EAAAC,EAAAC,cAAC+D,EAAD,WAKAI,mLAGF,OACErE,EAAAC,EAAAC,cAAA,OAAKC,UAAWlB,KAAKG,MAAMgF,WACzBpE,EAAAC,EAAAC,cAACoE,EAAD,MACAtE,EAAAC,EAAAC,cAACqE,EAAD,cANWrD,aAYbsD,mLAEF,IAIIC,EAAkB,6BAClBC,EAAY,kBAMhB,OALIzF,KAAKG,MAAMuF,MAAQ1F,KAAKG,MAAMuF,KAAKC,YAAc3F,KAAKG,MAAMuF,KAAKC,WAAWC,UAC9EJ,EAAkB,kBAClBC,EAAY,8BAIZ1E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYC,MAZf,CACZ0E,WAAY,SAYV9E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACgE,EAAD,CAAYE,UAAWK,EAAiBrE,MAAO,CAACI,gBAAiBwD,KACjEhE,EAAAC,EAAAC,cAAC6E,EAAD,CAAMX,UAAWM,aAjBRxD,aA8BJc,cANc,SAACC,GAC5B,MAAO,CACL0C,KAAM1C,EAAM0C,OAI6B,KAA9B3C,CAAoCwC,GC3E7CQ,EAAc,UAUpB,SAASC,EAAgB7F,GACvB,IAAMgB,EAAQ,CACZI,gBAAiBwE,EACjB5B,OAAQ,OACRzC,MAAO,OACPuE,SAAU,QACVC,OAAQ,KAGV,OACEnF,EAAAC,EAAAC,cAAA,OAAKE,MAAOA,GACThB,EAAMgG,UAmBEpD,oBAdf,SAAgB5C,GACd,OACEY,EAAAC,EAAAC,cAAC+E,EAAD,KACEjF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,UAAQtB,KAAK,SAASmC,QAAS,kBAAM3B,EAAM4B,SAASrC,OAClDqB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,8BCNbkF,mLAdX,IAAMjF,EAAQ,CACZkF,UAAW,SACXnB,UAAW,QACX3D,gBAfY,WAiBd,OACER,EAAAC,EAAAC,cAAA,OAAKE,MAAOA,GACVJ,EAAAC,EAAAC,cAACqF,EAAD,MACAvF,EAAAC,EAAAC,cAACsF,EAAD,cAVUtE,aCJEuE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,uECyDC,IAAMC,EAAUC,YAAgB,CACrCvE,MAxCF,WAAmC,IAjCnBwE,EAiCDxE,EAAoByE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAZ,GAAIG,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACjC,OAAQC,EAAOxH,MACb,IAAK,WACH,IAAMyH,EAAU,CACdpF,GAAImF,EAAOnF,GACXL,KAAMwF,EAAOxF,KACbC,YAAauF,EAAOvF,YACpBxB,QAAS+G,EAAO/G,QAChBU,WAAW,GAIb,OA7CUiG,EA2CHK,EA1CXC,EAAGC,WAAW,SAASC,IAAIR,GACxBS,KAAK,SAASC,GACXC,QAAQC,IAAI,6BAA8BF,EAAOzF,MAEpD4F,MAAM,SAASC,GACZH,QAAQG,MAAM,0BAA2BA,KAuC3C,GAAAC,OAAA1G,OAAA2G,EAAA,EAAA3G,CACKmB,GADL,CAEE6E,IAEJ,IAAK,gBAEH,OA9BN,SAAmBY,EAAOC,EAAKC,GAC7B,IAAIC,EAAYd,EAAGC,WAAW,SAASc,MAAM,KAAK,KAAKJ,GAEnDK,EAAa,GACjBA,EAAWJ,GAAOC,EAClBC,EAAUG,MAAMd,KAAK,SAASe,GAC5BA,EAAcC,QAAQ,SAASzB,GAC7BA,EAAItD,IAAIgF,OAAOJ,OAsBfK,CAAUvB,EAAOnF,GAAI,aAAa,GAC3BO,EAAMG,IAAI,SAAAC,GAAI,OACnBA,EAAKX,KAAOmF,EAAOnF,GAAnBZ,OAAAC,EAAA,EAAAD,CAAA,GAA6BuB,EAA7B,CAAmC7B,WAAW,IAAS6B,IAE3D,IAAK,cAEH,OA9CN,SAAmBqF,GACjB,IAAIG,EAAYd,EAAGC,WAAW,SAASc,MAAM,KAAK,KAAKJ,GACvDN,QAAQC,IAAI,SACZD,QAAQC,IAAIQ,EAAUG,OACtBH,EAAUG,MAAMd,KAAK,SAASe,GAC5BA,EAAcC,QAAQ,SAASzB,GAC7BA,EAAItD,IAAIkF,aAuCRC,CAAUzB,EAAOnF,IACVO,EAAMsG,OAAO,SAAAlG,GAAI,OAAIA,EAAKX,KAAOmF,EAAOnF,KACjD,QACE,OAAOO,IAgBXmD,KAZF,WAAiC,IAAnBA,EAAmBsB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAZ,GACnB,QAD+BA,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GAChBvH,MACb,IAAK,qBACH,IAAMiG,EAAUF,GAAQA,EAAKC,YAAcD,EAAKC,WAAWC,QAC3D,OAAOxE,OAAAC,EAAA,EAAAD,CAAA,GAAIsE,EAAX,CAAiBC,WAAWvE,OAAAC,EAAA,EAAAD,CAAA,GAAKsE,EAAI,WAAV,CAA0BE,SAAUA,MACjE,QACE,OAAOF,qBCvEboD,EAAAC,EAAAC,EAAA,uBAAA3B,IAqBA4B,gBATgB,CACdC,OAAQ,0CACRC,WAAY,6BACZC,YAAa,oCACbC,UAAW,aACXC,cAAe,yBACfC,kBAAmB,gBAKd,IAAMlC,EAAK4B,cAalB,IAAI1G,EAAQ,GAEZ8E,EAAGC,WAAW,SAASgB,MAAMd,KAAK,SAACe,GAC/BA,EAAcC,QAAQ,SAACzB,GACnBW,QAAQC,IAAIZ,EAAIyC,UAEpBjB,EAAcC,QAAQ,SAACzB,GACrBxE,EAAMkH,KAAK1C,EAAIyC,UAlBrB,WAAsC,IAArBE,EAAqB1C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GAC5B2C,EAAQC,YAAY/C,EAAS6C,GACjCC,EAAME,UAAU,kBAAOnC,QAAQC,IAAIgC,EAAMG,cAEzCC,IAASC,OACPjJ,EAAAC,EAAAC,cAACgJ,EAAA,EAAD,CAAUN,MAAOA,GACf5I,EAAAC,EAAAC,cAACiJ,EAAD,OAEFC,SAASC,eAAe,SAaxBC,CAAQ,CAAC9H,MAAOA,MFmFd,kBAAmB+H,WACrBA,UAAUC,cAAcC,MAAMhD,KAAK,SAAAiD,GACjCA,EAAaC","file":"static/js/main.68605af0.chunk.js","sourcesContent":["import {v4 as uuid} from 'uuid';\n\nexport const addTodo = (name, description, dueDate) => ({\n  id: uuid(),\n  type: 'ADD_TODO',\n  name: name,\n  description: description,\n  dueDate: dueDate\n})\n\nexport const markComplete = (id) => ({\n  type: 'MARK_COMPLETE',\n  id: id\n})\n\nexport const deleteTodo = (id) => ({\n  type: 'DELETE_TODO',\n  id: id\n})\n\nexport const toggleLeftColumn = () => ({\n    type: 'TOGGLE_LEFT_COLUMN'\n})","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { markComplete, deleteTodo } from '../actions.js';\n\n// Idk what this is actually doing, but it seems to be working\nfunction getColor(remainingDays){\n    let lightness = \"80\"\n    const truncedDays = remainingDays > 4 ? 4 : remainingDays\n    const percent = (truncedDays / 4.0)\n    let hue=(percent*50).toString(10);\n    if (remainingDays < 0) {\n      lightness = \"65\"\n      hue = \"0\"\n    } else if (remainingDays > 4) {\n      hue = \"50\"\n    }\n    return [\"hsl(\",hue,\",100%,\",lightness,\"%)\"].join(\"\");\n}\n\nfunction datediff(first, second) {\n    // Take the difference between the dates and divide by milliseconds per day.\n    // Round to nearest whole number to deal with DST.\n    return Math.trunc((second-first)/(1000*60*60*24));\n}\n\nclass Task extends Component {\n  render() {\n    const itemStyle = {\n      margin: \"5px\",\n      backgroundColor: \"lightyellow\",\n      borderRadius: \"5px\",\n      padding: \"5px\",\n      width: \"100%\"\n    }\n\n    let remainingDays = datediff(new Date(), new Date(this.props.dueDate))\n    const taskColor = getColor(remainingDays)\n    const taskStatus = this.props.completed ? \"Complete!\" : remainingDays < 0 ? \"Overdue\" : \"Incomplete\"\n\n    return (\n      <div className=\"card\" style={{...itemStyle, backgroundColor: this.props.completed ? \"lightgreen\" : taskColor}}>\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{this.props.name}</h5>\n          <p className=\"card-text\">{this.props.description}</p>\n          <div>Due Date: {this.props.dueDate}</div>\n          <h5>{taskStatus}</h5>\n          <button href=\"#\" className=\"btn btn-info\" onClick={() => this.props.dispatch(markComplete(this.props.id))}>Mark Complete</button>\n          <button href=\"#\" className=\"btn btn-danger\" onClick={() => this.props.dispatch(deleteTodo(this.props.id))}>Delete</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass Todos extends Component {\n  render() {\n    const todosContainerStyle = {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      width: \"100%\"\n    }\n\n    return (\n      <div style={todosContainerStyle}>\n        {this.props.todos.sort(function(a, b){return new Date(a.dueDate) - new Date(b.dueDate)}).map((todo, index) => (\n            <Task {...todo} dispatch={this.props.dispatch} />\n          ))}\n      </div>\n    )\n  }\n}\n\nconst mapStateToPropsTodos = (state) => {\n  return {\n    todos: state.todos\n  }\n}\n\nexport default connect(mapStateToPropsTodos, null)(Todos);\n\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addTodo } from '../actions.js'\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst borderColor = \"#6c7c96\"\n// const formColor = \"pink\"\n\nclass TodoForm2 extends Component {\n  render() {\n    const containerStyle = {\n      borderStyle: \"solid\",\n      borderColor: borderColor,\n      borderRadius: \"10px\",\n      //width: \"90%\",\n      class: \"form-group\",\n      padding: \"10px\",\n      margin: \"10px\"\n    }\n    let nameInput, descInput, dueDateInput;\n\n    return (\n      <form style={containerStyle}>\n        <div className=\"form-group\" width=\"90%\">\n          <input type=\"text\" className=\"form-control\" ref={node => (nameInput = node)} placeholder=\"Task Name\" />\n        </div>\n        <div className=\"form-group\">\n          <textarea className=\"form-control\" ref={node => (descInput = node)} placeholder=\"Description\" rows=\"2\"></textarea>\n        </div>\n        <div className=\"form-group\">\n          <label>Due Date</label>\n          <input type=\"date\" className=\"form-control\" ref={node => (dueDateInput = node)} />\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\" onClick={e => {\n            e.preventDefault()\n            if (!nameInput.value.trim()) {\n              return\n            }\n            this.props.dispatch(addTodo(nameInput.value, descInput.value, dueDateInput.value))\n            nameInput.value = ''\n            descInput.value = ''\n            dueDateInput.value = ''\n          }}>Add Task</button>\n      </form>\n    )\n  }\n}\n\nexport default connect()(TodoForm2);\n","import React from 'react';\n\nfunction Filter(props) {\n  const style = {\n    display: \"flex\",\n    alignItems: \"center\",\n    height: \"30px\",\n    fontSize: \"20px\",\n    color: \"white\"\n  }\n\n  return (\n    <div style={style}>\n      <input type=\"checkbox\" id={props.filterId} name={props.filterId} style={{marginRight: \"10px\"}}></input>\n      <p style={{marginRight: \"20px\"}}>{props.filterName}</p>\n    </div>\n  )\n}\n\nfunction StringFilter(props) {\n  const inputStyle = {\n    margin: \"0 0 0 15px\",\n    width: \"120px\"\n  }\n  const parentStyle = {\n    display: \"flex\", \n    alignItems: \"center\",\n    height: \"30px\"\n  }\n  const imgStyle = {\n    width: \"20px\"\n  }\n\n  return (\n    <div style={parentStyle}>\n      <img style={imgStyle} src=\"https://img.icons8.com/metro/26/000000/search.png\" alt=\"Search\"></img>\n      <input style={inputStyle} type=\"text\" size=\"10\"/>\n    </div>\n  )\n}\n\nexport function LeftFilters() {\n  const style = {\n    padding: \"15px\"\n  }\n\n  return (\n    <div style={style}>\n      <Filter filterId=\"today\" filterName=\"Today\" />\n      <Filter filterId=\"week\" filterName=\"Week\" />\n      <StringFilter />\n    </div>\n  )\n}\n","import React, { Component } from 'react';\nimport {default as Todos2} from './Todos2'\nimport {default as TodoForm2} from './TodoForm2'\nimport {LeftFilters} from './LeftFilters'\nimport { connect } from 'react-redux';\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst panelColor = \"#6c7c96\"\nconst panelColor2 = \"#9ab9ea\"\n\n/*\nconst panelColor = \"#1d006d\"\nconst panelColor2 = \"#00d0ff\"\n*/\n\n\nfunction Folders() {\n  const style = {\n    backgroundColor: panelColor2,\n    width: \"100%\"\n  }\n  return <div style={style} />\n}\n\nfunction LeftColumn(props) {\n  const style = {\n    backgroundColor: panelColor,\n    minHeight: \"100%\"\n  }\n\n  return (\n    <div className={props.calcClass} style={style}>\n      <LeftFilters />\n      <Folders />\n    </div>\n  )\n}\n\nclass Page extends Component {\n  render() {\n\n    return (\n      <div className={this.props.calcClass}>\n        <TodoForm2 />\n        <Todos2 />\n      </div>\n    )\n  }\n}\n\nclass Body extends Component {\n  render() {\n    const style = {\n      paddingTop: \"50px\"\n    }\n\n    let leftColumnClass = \"d-none d-sm-block col-sm-4\"\n    let pageClass = \"col-12 col-sm-8\"\n    if (this.props.page && this.props.page.leftColumn && this.props.page.leftColumn.visible) {\n      leftColumnClass = \"col-12 col-sm-4\"\n      pageClass = \"d-none d-sm-block col-sm-8\"\n    }\n\n    return (\n      <div className=\"container\" style={style}>\n        <div className=\"row\">\n          <LeftColumn calcClass={leftColumnClass} style={{backgroundColor: panelColor2}} />\n          <Page calcClass={pageClass} />\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToPropsTodos = (state) => {\n  return {\n    page: state.page\n  }\n}\n\nexport default connect(mapStateToPropsTodos, null)(Body);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { toggleLeftColumn } from '../actions.js'\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst headerColor = \"#47476b\"\n\n/*\nconst headerColor = \"#ff00ff\"\nconst panelColor = \"#1d006d\"\nconst panelColor2 = \"#00d0ff\"\nconst pageColor = \"#3c0042\"\n*/\n\n\nfunction HeadFootWrapper(props) {\n  const style = {\n    backgroundColor: headerColor,\n    height: \"50px\",\n    width: \"100%\",\n    position: \"fixed\",\n    zIndex: 999\n  }\n\n  return (\n    <div style={style}>\n      {props.children}\n    </div>\n  )\n}\n\nfunction Header(props) {\n  return (\n    <HeadFootWrapper>\n      <nav className=\"navbar navbar-light navbar-2\">\n        <div className=\"d-block d-sm-none\">\n          <button type=\"button\" onClick={() => props.dispatch(toggleLeftColumn())}>\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n        </div>\n      </nav>\n    </HeadFootWrapper>\n  )\n}\n\nexport default connect()(Header);\n","import React, { Component } from 'react';\nimport {default as Body} from './Body'\nimport {default as Header} from './Header'\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst pageColor = \"#e0e0eb\"\n\n/*\nconst headerColor = \"#ff00ff\"\nconst panelColor = \"#1d006d\"\nconst panelColor2 = \"#00d0ff\"\nconst pageColor = \"#3c0042\"\n*/\n\n\nclass App extends Component {\n  render() {\n    const style = {\n      textAlign: \"center\",\n      minHeight: \"100vh\",\n      backgroundColor: pageColor\n    }\n    return (\n      <div style={style}>\n        <Header />\n        <Body />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport { db } from './index';\n\nfunction addDoc(doc) {\n  db.collection(\"todos\").add(doc)\n    .then(function(docRef) {\n        console.log(\"Document written with ID: \", docRef.id);\n    })\n    .catch(function(error) {\n        console.error(\"Error adding document: \", error);\n    });\n}\n\nfunction removeDoc(docId) {\n  var doc_query = db.collection('todos').where('id','==',docId);\n  console.log(\"query\")\n  console.log(doc_query.get());\n  doc_query.get().then(function(querySnapshot) {\n    querySnapshot.forEach(function(doc) {\n      doc.ref.delete();\n    });\n  });\n}\n\nfunction updateDoc(docId, key, val) {\n  var doc_query = db.collection('todos').where('id','==',docId);\n\n  let updateDict = {}\n  updateDict[key] = val\n  doc_query.get().then(function(querySnapshot) {\n    querySnapshot.forEach(function(doc) {\n      doc.ref.update(updateDict);\n    });\n  });\n}\n\nfunction todos(todos = [], action) {\n  switch (action.type) { \n    case 'ADD_TODO':\n      const newTodo = {\n        id: action.id,\n        name: action.name,\n        description: action.description,\n        dueDate: action.dueDate,\n        completed: false\n      }\n      addDoc(newTodo);\n\n      return [\n        ...todos,\n        newTodo\n      ]\n    case 'MARK_COMPLETE':\n      updateDoc(action.id, \"completed\", true)\n      return todos.map(todo =>\n        todo.id === action.id ? { ...todo, completed: true } : todo\n      )\n    case 'DELETE_TODO':\n      removeDoc(action.id);\n      return todos.filter(todo => todo.id !== action.id)\n    default:\n      return todos\n  }\n}\n\nfunction page(page = {}, action) {\n  switch (action.type) {\n    case 'TOGGLE_LEFT_COLUMN':\n      const visible = page && page.leftColumn && page.leftColumn.visible\n      return {...page, leftColumn: {...page[\"leftColumn\"], visible: !visible}}\n    default:\n      return page\n  }\n}\n\nexport const reducer = combineReducers({\n  todos,\n  page\n})\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { reducer } from './reducers';\nimport * as firebase from 'firebase';\nimport 'firebase/firestore';\n\n// Initialize Firebase\nlet db_config = {\n  apiKey: \"AIzaSyCDpV8g1oV0FuL7m0_xTD8ocd5J0Y9uobM\",\n  authDomain: \"todo-74ead.firebaseapp.com\",\n  databaseURL: \"https://todo-74ead.firebaseio.com\",\n  projectId: \"todo-74ead\",\n  storageBucket: \"todo-74ead.appspot.com\",\n  messagingSenderId: \"11718190880\"\n};\n\nfirebase.initializeApp(db_config);\n\nexport const db = firebase.firestore();\n\nfunction initApp(preloadedState = {}) {\n  let store = createStore(reducer, preloadedState)\n  store.subscribe(() => (console.log(store.getState())))\n\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>, \n    document.getElementById('root'));\n}\n\nlet todos = []\n\ndb.collection(\"todos\").get().then((querySnapshot) => {\n    querySnapshot.forEach((doc) => {\n        console.log(doc.data());\n    });\n    querySnapshot.forEach((doc) => {\n      todos.push(doc.data());\n    });\n\n    initApp({todos: todos})\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}